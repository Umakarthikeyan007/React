{"ast":null,"code":"import { isValidPhoneNumber } from \"react-phone-number-input\";\nexport function emailValidation(email) {\n  if (email === '') return false;\n  const regex_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (regex_pattern.test(email)) {\n    return true;\n  }\n  return false;\n}\nexport function nameValidation(name) {\n  if (name === '') return false;\n  for (var i = 0; i < name.length; i++) {\n    var charCode = name.charCodeAt(i);\n    if (!(charCode >= 65 && charCode <= 90 || charCode >= 97 && charCode <= 122 || charCode === 32)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function passwordValidation(cpwd, pwd) {\n  if (cpwd === '') return false;\n  if (!(cpwd === pwd)) return false;\n  return true;\n}\nexport function sdateValidation(date) {\n  var today = new Date();\n  let str = date.split(\"-\");\n  if (parseInt(str[0]) < today.getFullYear()) {\n    return false;\n  } else if (parseInt(str[0]) === today.getFullYear() && parseInt(str[1]) < today.getMonth() + 1) {\n    return false;\n  } else if (parseInt(str[0]) === today.getFullYear() && parseInt(str[1]) === today.getMonth() + 1 && parseInt(str[2]) < today.getDate()) {\n    return false;\n  } else {\n    return true;\n  }\n}\nexport function edateValidation(edate, sdate) {\n  let str1 = sdate.split(\"-\");\n  let str2 = edate.split(\"-\");\n  if (parseInt(str1[0]) > parseInt(str2[0])) {\n    return false;\n  } else if (parseInt(str1[0]) <= parseInt(str2[0]) && parseInt(str1[1]) > parseInt(str2[1])) {\n    return false;\n  } else if (parseInt(str1[0]) <= parseInt(str2[0]) && parseInt(str1[1]) < parseInt(str2[1])) {\n    return true;\n  } else if (parseInt(str1[0]) === parseInt(str2[0]) && parseInt(str1[1]) === parseInt(str2[1]) && parseInt(str1[2]) > parseInt(str2[2])) {\n    return false;\n  } else {\n    return true;\n  }\n}\nexport function phoneValidation(mobile) {\n  if (mobile == '') return false;\n  const isValid = isValidPhoneNumber(mobile);\n  return isValid;\n}\nexport function addressValidation(address) {\n  if (address === '') return false;\n  if (address.length > 50) return false;\n  var notallowedCharacters = \"!$%^&*+={][}><?|\";\n  for (var i = 0; i < notallowedCharacters.length; i++) {\n    var char = notallowedCharacters.charAt(i);\n    if (address.indexOf(char) != -1) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function dateValidation(date) {\n  var today = new Date();\n  let str = date.split(\"-\");\n  if (parseInt(str[0]) > today.getFullYear()) {\n    return false;\n  } else if (parseInt(str[0]) == today.getFullYear() && parseInt(str[1]) > today.getMonth() + 1) {\n    return false;\n  } else if (parseInt(str[0]) == today.getFullYear() && parseInt(str[1]) == today.getMonth() + 1 && parseInt(str[2]) > today.getDate()) {\n    return false;\n  } else {\n    return true;\n  }\n}","map":{"version":3,"names":["isValidPhoneNumber","emailValidation","email","regex_pattern","test","nameValidation","name","i","length","charCode","charCodeAt","passwordValidation","cpwd","pwd","sdateValidation","date","today","Date","str","split","parseInt","getFullYear","getMonth","getDate","edateValidation","edate","sdate","str1","str2","phoneValidation","mobile","isValid","addressValidation","address","notallowedCharacters","char","charAt","indexOf","dateValidation"],"sources":["/home/divum/My Projects/Practice/Divum EmpList with JWT/Frontend/divumemplist/src/Utils/Validate.js"],"sourcesContent":["import  { isValidPhoneNumber } from \"react-phone-number-input\";\n\nexport function emailValidation(email) {\n\n    if (email === '') return false;\n    const regex_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \n    if (regex_pattern.test(email)) {\n      return true;\n    }\n    return false;\n}\n\nexport function nameValidation(name) {\n\n    if (name === '') return false;\n  \n    for (var i = 0; i < name.length; i++) {\n      var charCode = name.charCodeAt(i);\n      if (!((charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || charCode === 32)) {\n        return false;\n      }\n    }\n  \n    return true;\n  \n}  \n\nexport function passwordValidation(cpwd,pwd) {\n\n    if (cpwd === '') return false;\n    \n    if(!(cpwd === pwd)) return false;\n\n    return true;\n  \n}  \n\nexport function sdateValidation(date) {\n  var today = new Date();\n  let str = date.split(\"-\");\n  if (parseInt(str[0]) < today.getFullYear()) {\n    return false;\n  }\n  else if (parseInt(str[0]) === today.getFullYear() && parseInt(str[1]) < today.getMonth() + 1) {\n    return false;\n  }\n  else if (parseInt(str[0]) === today.getFullYear() && parseInt(str[1]) === today.getMonth() + 1 && parseInt(str[2]) < today.getDate()) {\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n\nexport function edateValidation(edate,sdate) {\n  let str1 = sdate.split(\"-\");\n  let str2 = edate.split(\"-\");\n    \n  if (parseInt(str1[0]) > parseInt(str2[0])) {\n    return false;\n  }\n  else if (parseInt(str1[0]) <= parseInt(str2[0]) && parseInt(str1[1]) > parseInt(str2[1])) {\n    return false;\n  }\n  else if (parseInt(str1[0]) <= parseInt(str2[0]) && parseInt(str1[1]) < parseInt(str2[1])) {\n    return true;\n  }\n  else if (parseInt(str1[0]) === parseInt(str2[0]) && parseInt(str1[1]) === parseInt(str2[1]) && parseInt(str1[2]) > parseInt(str2[2])) {\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n\nexport function phoneValidation(mobile) {\n  if (mobile=='') return false;\n  const isValid = isValidPhoneNumber(mobile);\n  return isValid;\n}\n\nexport function addressValidation(address) {\n\n  if (address === '') return false;\n\n  if (address.length > 50) return false;\n\n  var notallowedCharacters = \"!$%^&*+={][}><?|\";\n\n\n  for (var i = 0; i < notallowedCharacters.length; i++) {\n    var char = notallowedCharacters.charAt(i);\n\n\n    if (address.indexOf(char) != -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function dateValidation(date) {\n  var today = new Date();\n  let str = date.split(\"-\");\n  if (parseInt(str[0]) > today.getFullYear()) {\n    return false;\n  }\n  else if (parseInt(str[0]) == today.getFullYear() && parseInt(str[1]) > today.getMonth() + 1) {\n    return false;\n  }\n  else if (parseInt(str[0]) == today.getFullYear() && parseInt(str[1]) == today.getMonth() + 1 && parseInt(str[2]) > today.getDate()) {\n    return false;\n  }\n  else {\n    return true;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}